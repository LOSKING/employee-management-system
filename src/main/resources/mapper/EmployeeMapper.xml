<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.emp.mapper.EmployeeMapper">
    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.example.emp.entity.Employee">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="gender" property="gender" />
        <result column="age" property="age" />
        <result column="id_card" property="idCard" />
        <result column="phone" property="phone" />
        <result column="email" property="email" />
        <result column="address" property="address" />
        <result column="department_id" property="departmentId" />
        <result column="position_id" property="positionId" />
        <result column="entry_date" property="entryDate" />
        <result column="status" property="status" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>
    
    <!-- 查询所有员工 -->
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT e.*, d.name as department_name, p.name as position_name
        FROM employee e
        LEFT JOIN department d ON e.department_id = d.id
        LEFT JOIN position p ON e.position_id = p.id
        ORDER BY e.id DESC
    </select>
    
    <!-- 根据ID查询员工 -->
    <select id="selectById" resultMap="BaseResultMap">
        SELECT e.*, d.name as department_name, p.name as position_name
        FROM employee e
        LEFT JOIN department d ON e.department_id = d.id
        LEFT JOIN position p ON e.position_id = p.id
        WHERE e.id = #{id}
    </select>
    
    <!-- 根据条件查询员工列表 -->
    <select id="selectByCondition" resultMap="BaseResultMap" parameterType="com.example.emp.entity.Employee">
        SELECT e.*, d.name as department_name, p.name as position_name
        FROM employee e
        LEFT JOIN department d ON e.department_id = d.id
        LEFT JOIN position p ON e.position_id = p.id
        <where>
            <if test="name != null and name != ''">
                AND e.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="departmentId != null">
                AND e.department_id = #{departmentId}
            </if>
            <if test="positionId != null">
                AND e.position_id = #{positionId}
            </if>
            <if test="status != null">
                AND e.status = #{status}
            </if>
        </where>
        ORDER BY e.id DESC
    </select>
    
    <!-- 新增员工 -->
    <insert id="insert" parameterType="com.example.emp.entity.Employee" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO employee (
            name, gender, age, id_card, phone, email, address, 
            department_id, position_id, entry_date, status
        ) VALUES (
            #{name}, #{gender}, #{age}, #{idCard}, #{phone}, #{email}, #{address}, 
            #{departmentId}, #{positionId}, #{entryDate}, #{status}
        )
    </insert>
    
    <!-- 更新员工 -->
    <update id="update" parameterType="com.example.emp.entity.Employee">
        UPDATE employee
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="age != null">age = #{age},</if>
            <if test="idCard != null">id_card = #{idCard},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="address != null">address = #{address},</if>
            <if test="departmentId != null">department_id = #{departmentId},</if>
            <if test="positionId != null">position_id = #{positionId},</if>
            <if test="entryDate != null">entry_date = #{entryDate},</if>
            <if test="status != null">status = #{status},</if>
        </set>
        WHERE id = #{id}
    </update>
    
    <!-- 删除员工 -->
    <delete id="deleteById">
        DELETE FROM employee WHERE id = #{id}
    </delete>
</mapper>